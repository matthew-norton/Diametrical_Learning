To Do:

1) Make save_nets, plotting, and asses work for one net at a time.
2) Documentation
3) Argparser for command line usage


Requirments List:

- Python 3.6+
- pytorch 1.2+
- torchvision 0.4+
- numpy 1.17+
- matplotlib 3.1.1+ (for utils.plot_net )
- seaborn 0.9+ (for diametric.sample_neighborhood_losses)
- pandas 0.25+ (for diametric.sample_neighborhood_losses)

models
  - Simple_Net
  - resnet20 (new_resnet_v2)
  -resnet18 (new_resnet)

layers
  - new_nn (linear and conv2d shift)



fast_random
  - MultithreadedRNG


utils
  - save_nets
  - load_nets


datastore
  - SubLoader


diametrical
  - build_net (these networks have special options for forward and
              also have attributes to track history and generate random directions)
  - assess
  - train
  - test
  - sample_neighborhood


global params that need checking
  batch_size_train = 15000
  batch_size_test = 1000
  train_loader and test_loader
  percent_flip = .5

  torch_random_seed = 1
  torch.backends.cudnn.enabled = True
  torch.manual_seed(torch_random_seed)

  device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
